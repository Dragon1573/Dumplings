Version: 6.4.0
Installer:
- Architecture: x86
  InstallerUrl: https://ccl.northwestern.edu/netlogo/6.4.0/NetLogo-6.4.0-32.msi
- Architecture: x64
  InstallerUrl: https://ccl.northwestern.edu/netlogo/6.4.0/NetLogo-6.4.0-64.msi
Locale:
- Locale: en-US
  Key: ReleaseNotes
  Value: |-
    A major change in this release the introduction of new features in BehaviorSpace
    BehaviorSpace New Features
    - A new syntax that allows parameter combinations to be run separately, rather than being expanded combinatorically.
    - Measurements can be conditionally recorded when a boolean reporter is true.
    - Commands can be run before the experiment begins.
    - Commands can be run after the experiment ends.
    - The mean and standard deviation of data from repetitions can be output to a file.
    - List data can be output to a file with one list element per cell.
    - Experiments can now be paused and resumed.
    - Experiments can now be exported to an XML file that can be used when running headlessly.
    - Experiments in an XML file can now be imported into a model.
    - There is a reduction in memory usage for experiments containing plots when Update plots and monitors is unchecked in the Run options dialog.
    Language Changes
    The let and set primitives now support taking a list of variable names as the first argument and will assign values to those variables from a list of values given as the second argument. This is useful in many situations, but especially when you want to have a reporter procedure calculate and report multiple values to be used elsewhere.
    A new reporter primitive has been added, who-are-not. It takes an agentset as a lefthand side argument and an agent or another agentset as a righthand side argument and reports all agents in the former who are not in the latter. For example: let strangers turtles who-are-not link-neighbors.
    Bug Fixes and Changes
    - The save dialog will no longer appear when clicking the close button on an already-saved includes file code tab.
    - When an includes code file is edited, compiled, and closed without saving, the model will correctly re-compile without the unsaved change.
    - When extensions are updated through the extensions manager, existing files and libraries for them will be removed so conflicts between versions cannot occur.
    - An error will no longer occur when opening a NetLogo model stored in the user’s home directory due to the extension locating code trying to search restricted folders.
    - Plotting now uses its own RNG that is cloned from the main RNG and updated when the main RNG changes. This means if plotting is enabled, it will be reproducible from the main RNG, but if plotting is disabled the behavior of the model will not change when using the same main RNG seed.
    - A failed compile of a string as a command with run could cause the same string to fail to run as a reporter using runresult later.
    - Patch colors can now be set to RGBA values with an alpha channel, the alpha channel is just ignored as there is nothing “behind” patches. Previously this would cause an error to occur.
    - Users can add symbolic links to their models library folders to point to other directories to have those models available for loading in the app. This had worked in a prior version of NetLogo, but was accidentally disabled with other bugfixes.
    - The link-neighbor? boolean reporter has had some small optimizations done to improve performance.
    - Agent labels now support linebreaks.
    - Errors that happen when NetLogo is starting but before the full interface appears should now be caught and displayed in a simple dialog. Previously to see such errors NetLogo would have to be started from a command line console.
    - The default maximum memory usage for NetLogo is now set to 50% of system memory instead of a static limit of 1 gigabyte. For systems with greater than 2 gigabytes of memory this should give improved performance and reduce the chance of getting out of memory errors during model runs.
    - When the extension manager is disabled via the Java environment property, no data will be fetched over the network. Previously the current extension listing would be fetched even though using the list in the manager was disabled.
    - The <breed>-at primitive now works properly in 3D. Previously it would function as the 2D version, only getting agents with z-coordinate of 0.
    BehaviorSpace Bug fixes and changes
    - 3D BehaviorSpace runs are now allowed.
    - BehaviorSpace no longer exits when there is a plot compilation error.
    - Error messages for BehaviorSpace variable errors have been improved.
    - BehaviorSpace output files no longer contain trailing spaces.
    - Headless console mode now has a --help flag.
    - The Experiment dialog makes use of tooltips and has a cleaner look.
    - Changes will not be saved if the close/X button of the Experiment dialog is hit.
    - The number of threads in the Run options dialog is now saved.
    - Experiments will not run if the close/X button of the Run options dialog is hit.
    Extension Updates
    - The Bitmap extension now supports reading images from base64-encoded strings and writing images out to base64-encoded strings.
    - The GIS extension has a couple of bug fixes: 1) its string-based search of features could include too many items, and 2) the code for creating turtles inside a polygon was executed for existing turtles outside that polygon.
    Documentation Updates
    - The logical operator precedence for and and or is clarified in the docs as not exactly matching how other programming languages function.
    - Clarify that mouse-inside? only works when the mouse is in the world, not only in the view, which can happen with unwrapped worlds and use of the follow primitive.
    - Removed the -> variable, a leftover from the switch from the old anonymous task syntax.
    - Clarify that an extension must be installed for the extensions keyword to take effect.
    Models Library Changes
    New Sample Models:
    - Food Reward Learning
    - Current in a Semiconductor
    - Radical Polymerization with Chains
    - Food Reward Learning
    - Baldwin Effect
    Sample Model Changes
    - Fixed a minor issue in the Monte Carlo Lennard-Jones model.
    - Renamed Prisoner’s Dilemma models from “PD” to “Prisoner’s Dilemma” and clarified that “confess” means “defect” in the info tab.
    - Polymer dynamics model info tab was edited to indicate that this is not strictly speaking a cellular automata.
    - Wolf Sheep Predation was updated to include BehaviorSpace experiments that use the new BehaviorSpace features.
    - Anisogomy model was updated and improved.
- Key: ReleaseNotesUrl
  Value: https://ccl.northwestern.edu/netlogo/docs/versions.html#version-640-november-2023
