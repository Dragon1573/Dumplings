Installer:
- Architecture: x86
  InstallerUrl: https://sourceforge.net/projects/redpanda-cpp/files/v3.0/RedPanda.C++.3.0.win32.MinGW32_8.1.Setup.exe/download
- Architecture: x64
  InstallerUrl: https://sourceforge.net/projects/redpanda-cpp/files/v3.0/RedPanda.C++.3.0.win64.MinGW64_11.4.Setup.exe/download
Locale:
- Locale: en-US
  Key: ReleaseNotesUrl
  Value: https://sourceforge.net/projects/redpanda-cpp/files/v3.0/
- Locale: en-US
  Key: ReleaseNotes
  Value: |-
    - enhancement: New chinese translation for invalid filename messagebox. (by XY0797@github.com)
    - enhancement: Limit the minimum font size in options dialog to 5. (by XY0797@github.com)
    - enhancement: After a new file is created in filesystem panel, auto select and rename it. (by XY0797@github.com)
    - enhancement: Select file basename when rename in the filesystem panel. (by XY0797@github.com)
    - change: Don't use "Microsoft Yahei" as the default non-ascii font in non-chinese environment.
    - enhancement: Support unicode characters > 0xFFFF
    - enhancement: Support unicode ZWJ and ZWNJ.
    - enhancement: Support unicode combining characters.
    - enhancement: Don't force fixed-width when using non fixed-width fonts.
    - change: Replace non-ascii font with fallback font.
    - enhancement: Display ascii control chars.
    - fix: Parser: invalidating file may lost class inheritance infos.
    - fix: Function argument infos are not correctly parsed.
    - enhancement: Migrate external calls from command string to argv array to improve safety and security.
    - enhancement: Support POSIX shell-like escaping in user inputs for compiler arguments.
    - fix: (Hopefully) properly escape filenames and arguments in makefile generation.
    - enhancement: Beautify display for spaces and linebreaks.
    - fix: Insert line after comments may auto add an extra '*'.
    - fix: Can't show function tips for stdiossync_with_stdio.
    - fix: Wrong indent for the line after the pasted context.
    - Enhancement: When '{' is inputted and there are contents selected, auto add line breaks and indents.
    - fix: Selected lines doesn't draw line break glyphs.
    - fix: issue #215 (Caret may be drawn in the gutter.)
    - change: Force use utf8 as the exec encoding for fmtlib in the auto link options page.
    - fix: After spaces in comments and strings, symbol completion for '{' and '(' are wrong.
    - fix: Issue #230 Crash when input " in the txt files.
    - enhancement: Unique look&feel for the underline shown while ctrl+mouse over #include line.
    - enhancement: Better look&feel for the wave underline shown for syntax errors.
    - fix: "float" in #include "float.h" is wrong syntax colored.
    - enhancement: Unify syntax color for #include header name
    - enhancement: Issue #229 Press Enter/Return in the tree view in files panel will open the file.
    - enhancement: Internal optimization for loading/editing files.
    - enhancement: Show space glyphs in C/C++ char literals.
    - enhancement: Optimization for string/raw string/char literal status check while completing symbols in c/c++ files.
    - enhancement: Windows installer Hi-DPI support.
    - fix: Delete/Insert in column editing mode.
    - enhancement: Issue #196 Support C++ using alias in syntax highlighting/code completion/function tips.
    - enhancement: Support annonymous class
    - fix: Using alias for global symbols are not correctly handled.
    - enhancement: Support "enum struct" Scoped enumerations.
    - fix: Function tips contains functions that not in the scope.
    - fix: Hint for bold text (

      ) are not correctly handled in the function tips.
    - enhancement: Improve lldb-mi compatibility.
    - fix: Failed to evaluate expressions while debugging, if the expression has spaces in it.
    - fix: When debugging, can't watch expressions that has spaces in it.
    - enhancement: Font list in the options / editor / font panel( by CyanoHao ).
    - enhancement: Text are vertically center aligned in lines( by CyanoHao ).
    - fix: In the debugger console, Auto-wrapped lines can't be correctly selected.
    - enhancement: Auto choose a better font for theme choosing dialog in the first run.
    - fix: Debugger console's background not correctly cleared before redrawn.
    - enhancement: Make output in the debug console cleaner.
    - enhancement: Execute the last debug command in the debug console if ENTER pressed.
    - change: When debugging, don't auto set focus to the editor.
    - enhancement: Folding button scales with editor font.
    - fix: Shouldn't show header completion popup in #include line comments.
    - change: Invert scroll direction in horizontal, like in vertical.
    - fix: Caret unseen when move to a long line end by press END.
    - fix: No icons for inherited class private members.
    - fix: Ctrl+Return insert linebreak shouldn't scroll unnecessarilly.
    - enhancement: Move caret to line begin would scroll to the begin if possible.
    - fix: Filename in tables in the debug panel are not correctly eroded.
    - enhancement: Tooltip info for the stacktrace table in the debug panel.
    - fix: '=' is treadted as '' when parsing.
    - fix: Can't correctly retrieve function parameters type.
    - fix: Auto type induction for expression contains '[]' are not correct.
    - fix: Option 'Pause after run in console' for tools doesn't work.
    - fix: Filename that contains '&' doesn't correctly displayed in the editor tab.
    - enhancement: Type induction for "auto &&" vars.
    - enhancement: Syntax highlighting for c++ attributes.
    - enhancement: Show "std::function" in the completion list.
    - enhancement: Improvement in italic font support.
    - fix: History not correctly loaded with up/down arrow key in the debug console.
    - enhancement: Improve lambda expression support.
    - enhancement: Show type completion hint after "constexpr"/"extern"/"static"/"consteval"/"constinit"/"const"/"volatile"/"inline" etc.
    - enhancement: Restore line position after file is modified outside and reloaded.
    - fix: Caret on '('/',' in string/comment shouldn't invoke function info tips.
    - fix: Function name not correctly found if it and the '(' is not in one line;
    - fix: Register names in the cpu info are not in correct order.
    - enhancement: Auto type induction for new / temp class object.
    - enhancement: Vertically scroll by pixel.
    - enhancement: Display (gdb) prompt in debug console after it's cleared.
    - fix: Output of "disas" is not shown in debug console.
    - fix: Display not correctly updated after select all in debug console.
    - change: Set focus to "find next" button when find/replace dialog is openned.
    - change: Don't set focus to "close" button after searched in the find/replace dialog
    - change: Set focus to "find" button when "find in files..." dialog is openned.
    - enhancement: Correct tab orders for all setting pages/dialogs.
    - enhancement: Shortcut key for buttons in find/replace and "find in files" dialogs.
    - enhancement: Auto define macro "_DEBUG" for "Debug" compiler set(like visual studio).
    - enhancement: Suggest macro names after "#ifdef"/"#ifndef"/"#undef".
    - enhancement: If contents from stderr are logged into "Tools Output" panel, add problem case name info to the log.
    - fix: In split screen mode, editor on the right can't be correctly found by commands.
    - fix: Remove duplicated macro defines make it's lost in the parse result.
    - fix: An undefined macro is still missing the the parse result after #undef is removed.
    - fix: If a class method is overloaded, only one of them is inherited by it's children.
    - enhancement: Adjust function tip pos to prevent it from run outside the right window edge.
    - enhancement: Open ".def" (Module definition file) file in editor when double click it in the project view.
    - enhancement: When a dll project has .def file, use it when generating the dll file.
    - fix: "project name".exe.manifest is auto removed when build the project.
    - fix: "0x3.12p+1" is treadted as a plus expression when reformatting code. ( by 绣球 135@qq ）
    - change: Don't turn on the code format option "indent class" by default.
    - enhancement: Add compiler set by choose the executable.
    - fix: Compile info for project doesn't have name of the project executable.
    - enhancement: Highlight words in the string/comments.
    - fix: If there are only 1 line in the editor, shift+down can't select it.
    - enhancement: By default, use monospaced font to display register values in the CPU Info dialog.
    - fix: Negative values in register like AH/AL are wrongs displayed as 32/64-bit number.
    - Change: Change background color for highlighted buttons in the default theme.
    - enhancement: Make colors in code suggestion popup consistent with the editor.
    - enhancement: Make colors in header suggestion popup consistent with the editor.
    - fix: C++ source after ';' are treated as comments in cpu info window.
    - enhancement: Support "extern template" in code parser.
    - enhancement: Set shortcuts for tools menu item.
    - enhancement: Enhancement for custom tools.
    - fix: Can't correctly undo/redo "Delete current line".
    - fix: Breakpoint condition expression that contains spaces doesn't work.
    - enhancement: Double click on breakpoint table's condition cell to modify it.
    - fix: Don't show function prototype tip for function name that contains namespace alias.
    - fix: Can't save changes in project options -> compiler set , after base compiler set was changed.
    - fix: Project options -> file doesn't work.
    - fix: Don't show function prototype tip for function name that contains more than one namespace;
    - fix: Compiler set options "Check for stack smashing attacks (-fstack-protector)" was not correctly applied when compiling.
    - fix: can't jump to definition/declaration for symbols in using alias statement like "using ::printf".
    - fix: Don't show completion suggestion for members of variable which type name has namespace alias;
    - fix: Theme manager not correctly inited in options dialog / environment / appearance.
    - enhancement: Size of icons in the completion popup changes with the editor font size.
    - change: Completion popup size settings are based on editor's char width/line height.
    - change: Remove "limit for copy" and "limit for undo" options.
    - fix: Can't find the correct type if current symbol is member of a class that has constructors.
    - fix: Alias a namespace to itself will create infinite loop.
    - fix: Can't find symbols indirectly included by other files.
    - enhancement: Function tip's width changes with editor width.
    - fix: '<' / '>' not shown in function tips.
    - enhancement: In debug console, Ctrl+C/Ctrl+X/Ctrl+V conflicts with application action.
    - enhancement: Auto hide Edit/Selection/Code/Refactor menu if no file openning.
    - enhancement: Auto hide Project menu if no project openning.
    - fix: Toggle breakpoint by shortcut may use wrong line.
    - fix: Size of the icons in problem and problem set panel are not correct.
    - fix: Shouldn't consider preceeding '&'/'*' when popping completion suggest list for variable members.
    - fix: Positions of current matching parenthesis not correctly updated.
    - fix: Can't show correct completion info for vars declared with template parameters ending with ">>".
    - enhancement: Auto type induction for "stdmake_shared"/"stdmake_unique".
    - enhancement: sdcc project compiler: compile source file in subfolders.
    - fix: project options -> compiler set -> static link & auto convert charset options not correctly loaded.
    - change: Don't generate project resource files for sdcc project.
    - fix: Name of the macro for project private resource header is not correct.
    - fix: In sdcc project, sdcc keywords are not in completion suggest list.
    - fix: In sdcc project, parser are not correctly inited as sdcc parser.
    - fix: Temp object + member function call is wrongly parsed as constructor.
    - enhancement: Improve how to manage themes in Options → general → appearance.
    - change: Use official astyle program.
    - enhancement: New code format option: "Remove superfluous empty lines exceeding"
    - enhancement: New code format option: "Remove superfluous spaces"
    - change: Remove code format option: "Delete continuous empty lines"
    - fix: Current editor wouldn't get parsed, when it's switched from another editor being parsed.
    - enhancement: Support macro in #include preprocessing statements.
    - fix: In options -> code format -> Program, Choose astyle path button doesn't work.
    - fix: project not correctly reparsed after rename unit.
    - enhancement: support C++ 17 structured binding in stl map containers foreach loop.
    - fix: Crash when has source line like "stdcout << (3+44>5(4+3)-1 && (4-3>5)) <<stdendl;".
    - fix: The memory usage displayed after program execution is wrong.
    - enhancement: New compiler option "stack size" in the link subpage.
    - change: Set "Ctrl+G" as the shortcut for "Goto line..."
    - change: Set "Ctrl+B" as the shortcut for "Toggle Bookmark"
    - fix: Fail to evaluate expressions if macro can't be expanded.
    - enhancement: New menu item "Code completion" in "Code" menu.
    - fix: Can't compile / run assembly files in gcc 13/14 .
    - enhancement: Show full filepath in the tooltip of editor tab.
- Locale: zh-CN
  Key: ReleaseNotes
  Value: |-
    - 功能改进：【工具】可以设置自定义工具项的输入和输出，以方便用户使用 clang-format 等外部程序编辑代码。
    - 功能增强：【编辑器】滚动条以像素为单位滚动。
    - 功能增强：【编辑器】改进对斜体的显示支持。
    - 功能增强：【编辑器】支持显示码点大于 0xFFFF 的 unicode 字符，如 emoji 等。
    - 功能增强：【编辑器】支持显示 unicode 复合字符。
    - 功能增强：【编辑器】支持 unicode 的 ZWJ 和 ZWNJ 字符。
    - 功能增强：【编辑器】显示 ascii 控制字符。
    - 功能增强：【编辑器】在使用非等宽字体时，不再强制文字以"M"字符宽度的整数倍显示。
    - 功能增强：【编辑器】在选项->编辑器->字体页中，增加“强制等宽显示”选项。在简体中文环境下默认勾选，其它环境下默认关闭。
    - 功能增强：【编辑器】编辑器字体设置改用字体列表形式。取消“非英文字体”选项。
    - 功能增强：【编辑器】在选项/编辑器/字体页中对字体列表进行配置（来自 CyanoHao@github）。
    - 功能增强：【编辑器】装订栏中的代码折叠按钮的大小与字体大小一致。
    - 功能增强：【编辑器】美化对空格字符和回车的显示。（当勾选了选项->编辑器->字体 中“显示空白字符”相关选项时）
    - 功能增强：【编辑器】当勾选了选项->编辑器->字体 中“显示空白字符”相关选项时，' '中的空格也能被显示.
    - 功能增强：【编辑器】文字显示在每一行的中间，即行间距在每行的上下均分。（来自 CyanoHao@github）。
    - 功能增强：【编辑器】将光标移动到行首非空格处时，尽量同时横向滚动到行首。
    - 功能增强：【编辑器】当选中内容后输入字符'{'时，自动插入回车并重新计算缩进.
    - 功能增强：【编辑器】优化载入/编辑大文件时的处理速度.
    - 功能增强：【编辑器】当文件被外部程序修改，重新载入其内容后，编辑器恢复载入前光标所在位置。
    - 功能改进：【编辑器】高亮选中单词时，可高亮字符串/注释中的单词。
    - 变化：【编辑器】通过鼠标滚轮、触摸板进行内容横向滚动时，方向与其它应用程序一致。
    - 变化：【编辑器】去除“复制限制”和“撤销限制”相关选项。
    - 修正：【编辑器】在窗口切分模式下，无论当前编辑器是否在右侧，相关菜单指令总是在左侧编辑器中执行。
    - 修正：【编辑器】在 /** 注释后插入空行时会自动插入多余的 *.
    - 修正：【编辑器】新粘贴内容的下一行的缩进不正确。
    - 修正：【编辑器】被选中区域中各行行尾的回车不能正确显示。（当勾选了选项->编辑器->字体 中“显示空白字符”相关选项时）
    - 修正：【编辑器】光标可能会错误的显示在装订栏中。
    - 修正：【编辑器】在注释和字符串中，不应自动补全'{'和'('。
    - 修正：【编辑器】在文本文件中输入"时可能崩溃。
    - 修正：【编辑器】在列编辑模式下删除/插入处理不正确。
    - 修正：【编辑器】按下 END 跳转到行尾时，光标定位在窗口外不显示。
    - 修正：【编辑器】按下 Ctrl+回车插入新行时，不进行不必要的横向滚动。
    - 修正：【编辑器】编辑器的标题标签页不能正确显示包含'&'的文件名。
    - 修正：【编辑器】只有一行内容时，shift+下箭头（选中到行尾）无效。
    - 修正：【编辑器】Ctrl+E 删除当前行后，撤销再重做的结果不正确。
    - 功能增强：【语法高亮】当按下 ctrl 键并将鼠标移动到#include 上时，在被包含的头文件名下显示一条完整统一的下划线。
    - 功能增强：【语法高亮】以统一的颜色字体显示#include 语句中的头文件名称
    - 功能增强：【语法高亮】支持 C++属性。
    - 修正：【语法高亮】#include "float.h"中的 float 被错误的以关键字的颜色字体显示。
    - 功能增强：【代码补全】在显示函数参数提示时自动将 using alias 替换成其实际引用的函数.
    - 功能增强：【代码补全】代码分析器支持匿名类。
    - 功能增强：【代码补全】代码分析器支持“enum struct”形式的枚举定义。
    - 功能增强：【代码补全】对"auto &&"类型的变量进行类型推导。
    - 功能增强：【代码补全】在补全提示列表中显示"std::function"。
    - 功能增强：【代码补全】改进对 lambda 表达式的支持。
    - 功能增强：【代码补全】对 new 表达式和临时变量进行类型推导。
    - 功能增强：【代码补全】在"#ifdef"/"#ifndef"/"#undef"后输入时提示宏名称。
    - 功能改进：【代码补全】调整函数定义信息显示的位置以避免其超出窗口右侧边缘。
    - 功能改进：【代码补全】代码补全窗口的配色与编辑器当前的配色一致。
    - 功能改进：【代码补全】头文件补全窗口的配色与编辑器当前的配色一致。
    - 功能改进：【代码补全】代码分析器能正确处理"extern template"定义。
    - 功能改进：【代码补全】提示弹窗的图标大小与编辑器字体一致。
    - 功能改进：【代码补全】提示弹窗的字体大小和行高与编辑器一致。
    - 功能改进：【代码补全】函数原型提示的宽度不超过编辑器宽度的 3/4。
    - 变化：【代码补全】基于编辑器的字体宽度和行高计算提示窗口的宽高。
    - 修正：【代码补全】不能显示 stdiossync_with_stdio 的函数参数提示。
    - 修正：【代码补全】代码分析器对全局变量的 using alias 分析不正确。
    - 修正：【代码补全】在函数提示信息列表中包含不在当前作用域中的函数的信息。
    - 修正：【代码补全】在函数提示信息中，加粗标签(

      )未被正确处理。
    - 修正：【代码补全】在#incldue 语句的注释部分中不应该显示补全提示
    - 修正：【代码补全】在补全提示列表中，通过 private 继承而来的私有类成员没有对应的图标。
    - 修正：【代码补全】代码分析器将'='错误的当作''处理。
    - 修正：【代码补全】代码分析器未能正确的获取函数参数类型。
    - 修正：【代码补全】对含'[]'的表达式的类型推导不正确。
    - 修正：【代码补全】如果'('和函数名不在同一列，不能正确显示函数参数提示信息。
    - 修正：【代码补全】代码分析器在重新解析文件文件时可能丢失类继承信息。
    - 修正：【代码补全】代码分析器对函数参数列表信息的解析不正确。
    - 修正：【代码补全】光标位于字符串/注释中的'('/','字符处时，会错误的显示函数参数提示信息。
    - 修正：【代码补全】删除重复的宏定义后，分析器认为该宏未被定义。
    - 修正：【代码补全】删除#undef 语句后，分析器依然认为该宏未被定义。
    - 修正：【代码补全】如果类方法存在多个重载形式，则只有一个会被子类继承。
    - 修正：【代码补全】对于函数名中含有命名空间别名的被调用函数，无法显示函数参数提示。
    - 修正：【代码补全】对于函数名中含有两个或以上命名空间名称的被调用函数，无法显示函数参数提示。
    - 修正：【代码补全】无法跳转到使用“using ::printf”形式定义的符号。
    - 修正：【代码补全】变量的定义类型中包含命名空间别名时，无法显示其成员的补全信息。
    - 修正：【代码补全】当前符号所在的类定义了构造函数时，找不到其正确的类型。
    - 修正：【代码补全】将命名空间别名定义为其自己，会导致无限循环。
    - 修正：【代码补全】找不到被其它文件间接包含的头文件里声明/定义的符号。
    - 修正：【代码补全】函数原型提示中不能正确显示含'<'和'>'的内容。
    - 变化：【代码排版】默认不勾选“缩进 class”选项，以保持和编辑器的自动缩进行为一致。
    - 修正：【代码排版】将形如"0x3.12p+1"的十六进制数误作为加法表达式处理。( by 绣球 135@qq ）
    - 功能增强：【用户界面】为无效文件路径提示框增加中文翻译。(来自 XY0797@github.com)
    - 功能增强：【用户界面】在选项->环境->外观中，限制字体不能小于 5。(来自 XY0797@github.com)
    - 功能改进：【用户界面】调整浅色主题中的高亮色，以突出显示对话框中当前拥有焦点的控件。
    - 功能改进：【用户界面】支持为自定义工具项设置快捷键。
    - 功能增强：【文件视图】新建文件后，自动选中并进入重命名状态。(来自 XY0797@github.com)
    - 功能增强：【文件视图】重命名文件时，仅选中文件名中除后缀名之外的部分。(来自 XY0797@github.com)
    - 功能增强：【文件视图】按回车键打开所选的文件。
    - 功能增强：【项目】在项目视图中双击.def 文件可将其在编辑器中打开。
    - 功能增强：【项目】如果 DLL 项目包含.def 文件，则使用它生成 dll 文件。
    - 功能改进：【项目】在项目选项->编译器配置集页中改变当前基础编译器设置后，不自动保存，而是和其它设置一样需手动保存。
    - 修正：【项目】在构建项目时会自动删除“项目名.exe.manifest”文件
    - 修正：【项目】项目选项->文件页工作不正确。
    - 功能增强：【编译】在使用“Debug”编译器配置调用 gcc 进行编译时，自动增加-D_DEBUG 参数（定义_DEBUG 宏，与 visual studio 行为类似）
    - 功能增强：【编译】改进通过自定义编译/链接参数调用编译器进行编译的安全性。（CyanoHao@github）
    - 功能增强：【编译】在选项->编译器->编译器配置集中增加“添加编译器”按钮，可通过指定编译器可执行文件的路径来创建编译器配置。（在 linux 系统中，/usr/bin 下可能同时存在多个的版本 gcc）
    - 变化：【编译】在选项/编译器/自动连接选项页中，默认勾选 fmtlib 的“强制以 utf8 作为输出字符集”选项。
    - 修正：【编译】在编译项目时，工具输出中的编译消息中未包含项目可执行文件名。
    - 修正：【编译】启用“检查栈溢出攻击(-fstack-protector)”选项时，生成的 gcc 编译参数不正确。
    - 功能增强：【用户界面】在第一次运行时，使用更美观的字体显示主题选择对话框。
    - 功能改进：【用户界面】重新设置所有设置页和对话框中控件的焦点顺序。
    - 功能改进：【用户界面】解决调试控制台等控件与菜单项的快捷键冲突的问题。
    - 功能改进：【用户界面】如果没有打开文件，则自动隐藏编辑/选择/代码/重构菜单。
    - 功能改进：【用户界面】如果没有打开项目，则自动隐藏项目菜单。
    - 修正：【用户界面】试题和试题集面板中按钮图标的大小不会随设置变化。
    - 修正：【用户界面】“使用自定义主题”选项被勾选时，选项 → 环境 → 外观配置页的主题列表不能正确读取用户配置文件夹中的自定义主题文件信息。
    - 功能增强：【安装程序】Windows 安装程序的 Hi-DPI 支持。
    - 功能增强：【安装程序】Windows 安装程序使用更大的字体。
    - 功能增强：【调试】改进对 lldb-mi 的兼容。
    - 功能增强：【调试】改进当未勾选“显示详细调试日志”时，主控台中显示的信息。
    - 功能增强：【调试】在调试控制台中直接回车时，自动执行上一次执行的调试指令（和 gdb 行为一致）。
    - 功能增强：【调试】为调试面板->调用栈列表中的内容增加鼠标信息提示。 "constexpr"/"extern"/"static"/"consteval"/"constinit"/"const"/"volatile"/"inline"等关键字后显示类型提示信息.
    - 功能改进：【调试】在调试时，不自动将焦点设回编辑器（以方便在调试控制台中手动调试）。
    - 功能改进：【调试】清空调试主控台的内容后，显示(gdb)提示。
    - 功能改进：【调试】使用与调试主控台一样的字体（默认为等宽字体）显示 CPU 信息窗口的寄存器列表中的信息。
    - 功能改进：【调试】双击调试面板->断点列表中的条件单元格时可修改断点条件。
    - 修正：【调试】无法在调试面板的求值框中对含空格的表达式进行求值。
    - 修正：【调试】无法监视含空格的表达式。
    - 修正：【调试】在调试面板的调试主控台中，被自动换行的行里的内容无法被正确选中。
    - 修正：【调试】在刷新显示调试控制台时，其背景未被正确清除。
    - 修正：【调试】调试面板中各列表里的文件名未被正确省略显示。
    - 修正：【调试】在调试主控台中使用上/下键载入命令历史时处理不正确。
    - 修正：【调试】调试时 CPU 信息对话框中寄存器列表里的寄存器名称和顺序不正确。
    - 修正：【调试】在调试控制台手动输入“disas”指令时，不显示输出的内容。
    - 修正：【调试】在调试控制台中全部选中后，未更新显示。
    - 修正：【调试】当 8/16/32 位寄存器中的值最高位为 1 时，其被错误的显示成 64 位 16 进制数。
    - 修正：【调试】使用混合模式进行反汇编时，CPU 信息窗口里面的 C++源代码中；后面的部分被误作为注释高亮。
    - 修正：【调试】含空格的断点条件不生效。
    - 修正：【调试】使用 Ctrl+F4 切换断点时，断点被设在了错误的行上。
    - 功能改进：【查找】搜索/替换和“在文件中查找……”对话框中的按钮增加 Alt 快捷键。
    - 变化：【查找】在打开查找/替换对话框时，将输入焦点设置到"查找下一个"按钮上。
    - 变化：【查找】在查找/替换对话框里搜索后，不将焦点移动到“关闭”按钮上。
    - 变化：【查找】在打开“在文件中查找……”时，将输入焦点设置到"查找"按钮上。
    - 功能改进：【试题集】如果试题案例设置中的“将标准错误内容重定向到工具面板”选项被勾选，在向工具面板写入标准错误信息时添加试题案例名称。
    - 功能增强：【其它】改进执行外部程序时的安全性。（来自 CyanoHao@github）
    - 变化：【其它】改进在生成的 makefile 时对相关路径和参数的转义处理。
    - 修正：【其它】选项/工具/通用页中的'程序在主控台中结束运行后暂停'选项不能正确工作。
    - 修正：【语法提示】在计算.或->后的变量成员的补全提示时，应忽略表达式前的&或*。
    - 修正：【编辑器】使用 ctrl+箭头改变选中内容范围时，不能及时更新匹配括号的位置。
    - 修正：【语法提示】如果变量的类型定义中含'>>'，则无法正确显示它的成员补全提示信息。
    - 功能增强：【语法提示】支持"stdmake_shared"和"stdmake_unique"函数返回值的自动类型推导。
    - 功能增强：【SDCC 项目】在子文件夹中编译源文件。
    - 修正：【项目】不能正确保存 项目选项 → 编译器配置页中的“自动链接”和“自动转换字符编码”选项。
    - 变化：【SDCC 项目】不再为 SDCC 项目生成项目资源文件。
    - 修正：【项目】私有资源头文件的宏的名称可能以数字开头。
    - 修正：【编辑器】在编辑 SDCC 项目文件时，补全提示中不显示 SDCC 特有的关键字。
    - 修正：【编辑器】在编辑 SDCC 项目文件时，不能正确解析含 SDCC 特有关键字的变量声明。
    - 修正：【语法提示】临时变量初始化被错误的解析为定义构造函数。
    - 改进：【UI】改进选项 → 通用 → 外观页中的自定义主题管理。
    - 改进：windows 发行版中集成的 xege 库升级为 github 最新版
    - 改进：32 位 windows 发行版中集成的 gcc 升级为 gcc 11.2 版。
    - 变化：【代码排版】改用官方版 astyle 程序进行代码排版。
    - 功能增强：【代码排版】增加新的排版选项：“删除多余的空行”（需 astyle 3.3 以上版本）。
    - 功能增强：【代码排版】增加新的排版选项：“删除多余的空格”（需 astyle 3.3 以上版本）。
    - 变化：【代码排版】删除排版：“删除连续的空行”（astyle 官方版不支持）。
    - 修正：【代码补全】从正在进行代码分析的编辑器切换到另一个编辑器后，不会立刻自动进行代码分析。
    - 功能增强：【代码补全】正确解析在#include 语句中出现的宏定义
    - 修正：【代码排版】排版程序选项页中的选择程序按钮点击后无反应。
    - 修正：【代码补全】在项目中重命名文件后，未正确进行代码分析更新。
    - 功能增强：【代码补全】对 foreach 循环中的 stl map 类容器，支持 C++ 17 结构化绑定语法的自动类型推导。
    - 修正：【代码补全】输入形如"stdcout << (3) <<stdendl;"后闪退。
    - 修正：【UI】程序执行后显示的内存使用量计算不正确。
    - 功能增强：【编译器】（仅 Windows 系统）链接选项页中增加“栈大小”选项。
    - 变化：【编辑器】默认将"Ctrl+G"设为"跳转到行……"的快捷键。
    - 变化：【编辑器】默认将"Ctrl+B"设为"切换书签"的快捷键。
    - 变化：【编辑器】去除“添加书签”和“删除书签”菜单项；增加“切换书签”菜单项。
    - 修正：【代码补全】如果表达式中的宏不能被展开，则不能推导该表达式的结果类型。
    - 功能增强：【编辑器】“代码”菜单中增加“代码补全”菜单项。
- Locale: zh-CN
  Key: ReleaseNotesUrl
  Value: http://royqh.net/redpandacpp/blog/2024/05/08/version.3.0/
Version: "3.0"
ReleaseTime: 2024-05-11T09:06:51.0000000Z
